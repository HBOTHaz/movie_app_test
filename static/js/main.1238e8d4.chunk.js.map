{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","id","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kUA6BeA,MAzBf,YAA6D,EAA5CC,GAA6C,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OACjD,OAAO,yBAAKC,UAAU,SACpB,yBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,yBAAKI,UAAU,cACb,wBAAIA,UAAU,eAAeJ,GAC7B,wBAAII,UAAU,cAAcL,GAC5B,wBAAIK,UAAU,gBACXD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAkB,wBAAIC,IAAKD,EAAOL,UAAU,gBAAgBI,OAE1E,uBAAGJ,UAAU,iBAAiBH,EAAQU,MAAM,EAAG,KAA/C,UCmKSC,G,iNA1KbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,I,EAIVC,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,4DALV,gBAGEJ,EAHF,EAERK,KACEA,KAAQL,OAGZ,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IANzB,2C,mFAUVQ,KAAKN,c,+BAGG,IAAD,EACuBM,KAAKT,MAA3BC,EADD,EACCA,UAAWC,EADZ,EACYA,OACnB,OACE,6BAASX,UAAU,aAChBU,EACC,yBAAKV,UAAU,UACb,0BAAMA,UAAU,eAAhB,eAEI,yBAAKA,UAAU,UAChBW,EAAOR,KAAI,SAAAgB,GAAK,OACf,kBAAC,EAAD,CACEb,IAAKa,EAAMzB,GACXA,GAAIyB,EAAMzB,GACVC,KAAMwB,EAAMxB,KACZC,MAAOuB,EAAMvB,MACbC,QAASsB,EAAMtB,QACfC,OAAQqB,EAAMC,mBACdrB,OAAQoB,EAAMpB,kB,GArCdsB,IAAMC,YCDxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,a","file":"static/js/main.1238e8d4.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\"\r\n\r\nfunction Movie({ id, year, title, summary, poster, genres }) {\r\n  return <div className=\"movie\">\r\n    <img src={poster} alt={title} title={title}></img>\r\n    <div className=\"movie-data\">\r\n      <h3 className=\"movie-title\">{title}</h3>\r\n      <h5 className=\"movie-year\">{year}</h5>\r\n      <ul className=\"movie-genres\">\r\n        {genres.map((genre, index) => <li key={index} className=\"genres-genre\">{genre}</li>)}\r\n      </ul>\r\n      <p className=\"movie-summary\">{summary.slice(0, 200)}...</p>\r\n    </div>\r\n  </div>;\r\n}\r\n\r\n// map을 쓰면 key를 주어야 한다는 것을 잊어선 안됨, 주는 값 선언은 자유\r\n\r\nMovie.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired,\r\n  genres: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Movie;","import React from 'react';\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: []\n  };\n\n  // async() = 비동기, await의 내용이 완료되어야만 다음으로 넘어감\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies }\n      }\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\");\n    this.setState({ movies, isLoading: false });\n  };\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { isLoading, movies } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader-text\">loading...</span>\n          </div>\n          ) : ( <div className=\"movies\">\n              {movies.map(movie => (\n                <Movie\n                  key={movie.id}\n                  id={movie.id}\n                  year={movie.year}\n                  title={movie.title}\n                  summary={movie.summary}\n                  poster={movie.medium_cover_image}\n                  genres={movie.genres}\n                />\n              ))}\n            </div>\n          )}\n      </section>\n    );\n  }\n}\n\n/*\nmovies.map(movie => (\n            <Movie\n              key={movie.id}\n              id={movie.id}\n              year={movie.year}\n              title={movie.title}\n              summary={movie.summary}\n              poster={movie.medium_cover_image} />\n          ))\n*/\n\n/*\nimport PropTypes from \"prop-types\";\n*/\n\n// npm start를 통해 실시간으로 보면서 코딩이 가능함\n\n// JSX의 개념 이해\n\n// import Example from \"./Example\";\n// on this Example is not using here \n// ./(filename) = in same directory\n\n// 함수를 설정해 틀은 같고 일부 내용만 다른 HTML을 작성 가능\n// {fav} == props.fav\n// 컴포넌트는 대문자로 시작할 것\n// fav 와 같은 내용은 자유롭게 작성 가능\n\n\n\n/* 하드코딩한 데이터, 주석처리\nfunction TextMessage({fav, pic, rat}) {\n  return <div>\n    <p>Title: {fav}</p>\n    <img src={pic} alt={fav}/>\n    <p>Rate: {rat}</p>\n    </div>\n}\n\n// string, number, boolean, function 등으로 제대로 입력됐는지 검사 가능\n// propTypes는 절대 다른 이름으로 적어선 안됨\nTextMessage.propTypes = {\n  name: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired\n};\n\n// 동적인 데이터를 위한 테스트\nconst Dynamic = [\n  {\n    id: 1,\n    name: \"Testboard1\",\n    image: \"https://images.unsplash.com/photo-1579509609985-460f8e833e4e?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=500&q=60\",\n    rating: 5\n  },\n  {\n    id: 2,\n    name: \"Testboard2\",\n    image: `..\\images\\board2.png`,\n    rating: 3\n  },\n  {\n    id: 3,\n    name: \"Testboard3\",\n    image: \"images/board3.png\",\n    rating: 4\n  }\n];\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>This is Title.</h1>\n      <TextMessage fav=\"Test1\"/>\n      <TextMessage fav=\"Test2\"/>\n      <TextMessage fav=\"Test3\"/>\n      {Dynamic.map(item => <TextMessage key={item.id} fav={item.name} pic={item.image} rat={item.rating}/> )}\n    </div>\n  );\n}\n\n*/\n\n// 필수 작성해야 하는 부분\n// state는 object임을 기억할 것\n/*\nclass App extends React.Component {\n  state = {\n    count: 0\n  }\n  // setState를 쓰지 않으면 리액트는 제대로 호출되지 않음\n  // this.setState({ count: this.state.count + 1 }) 이와 같은 방식은 추천하지 않음\n  add = () => {\n    this.setState(current => ({ count: current.count + 1 }))\n  };\n  minus = () => {\n    this.setState(current => ({ count: current.count - 1 }))\n  };\n  render() {\n    return <div>\n      <h1>Im ClassComponent, and number is {this.state.count}</h1>\n      <button onClick={this.add}>add</button>\n      <button onClick={this.minus}>Minus</button>\n    </div>\n  }\n\n}\n\n*/\n\n/* we can use like this, but it cause confuse.\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Wow, Did i do this?</h1>\n      <Example />\n    </div>\n  );\n}\n\n*/\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('potato'));\n// HTML을 불러오는 기능, App.js 함수 App() 내의 내용을 그대로 HTML에 구현 (JSX 개념)\n// Just Only one rendering. and the one is <App />\n// so I can't type next to <App />. like <App /><Example />. it's not work."],"sourceRoot":""}